# NachOS Docker Environment - Release Version
# Optimized for ARM Architecture (Apple Silicon) -> x86_64 emulation
# Created for educational use in Operating Systems courses

FROM --platform=linux/amd64 ubuntu:22.04

# Metadata
LABEL maintainer="NachOS Docker Environment" \
      description="Complete NachOS development environment for ARM/Apple Silicon" \
      version="1.0.0" \
      platform="linux/amd64"

# Set environment variables
ENV DEBIAN_FRONTEND=noninteractive \
    PATH="/usr/local/nachos/bin:${PATH}" \
    NACHOS_HOME="/root/NachOS"

# Set working directory
WORKDIR /root

# Install dependencies in a single layer to reduce image size
RUN apt-get update && \
    apt-get dist-upgrade -y && \
    # Enable i386 architecture (required for 32-bit support)
    dpkg --add-architecture i386 && \
    apt-get update && \
    # Install NachOS dependencies
    apt-get install -y --no-install-recommends \
        csh \
        ed \
        git \
        build-essential \
        gcc-multilib \
        g++-multilib \
        gdb \
        gdb-multiarch \
        nano \
        vim \
        wget \
        curl \
        ca-certificates && \
    # Clean up to reduce image size
    apt-get autoremove -y && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

# Copy NachOS source code and cross-compiler
COPY NachOS /root/NachOS

# Install MIPS cross-compiler and build NachOS
RUN cd /root/NachOS && \
    # Install cross-compiler
    cp -r usr/* /usr/ && \
    # Build NachOS
    cd code && \
    make && \
    # Clean up build artifacts to reduce size
    find . -name "*.o" -delete && \
    # Verify build
    ls -la userprog/nachos && \
    ls -la test/*.coff

# Create convenient startup script
RUN cat > /root/start-nachos.sh << 'EOF' && \
#!/bin/bash
echo "🚀 Welcome to NachOS Docker Environment!"
echo "📍 Platform: x86_64 emulated on ARM"
echo "📂 Location: $(pwd)"
echo ""
echo "🎯 Quick Start Commands:"
echo "  make                    # Rebuild NachOS if needed"
echo "  ./userprog/nachos -e ./test/test1    # Run test1"
echo "  ./userprog/nachos -d + -e ./test/test1    # Debug mode"
echo ""
echo "📝 Create your own program:"
echo "  nano test/myprogram.c"
echo "  # Compile with MIPS cross-compiler:"
echo "  /usr/local/nachos/decstation-ultrix/bin/gcc -G 0 -c -I../userprog -I../threads -I../lib myprogram.c"
echo "  /usr/local/nachos/decstation-ultrix/bin/ld -T script -N start.o myprogram.o -o myprogram.coff"
echo "  ../bin/coff2noff myprogram.coff myprogram"
echo "  # Run: ./userprog/nachos -e ./test/myprogram"
echo ""
cd $NACHOS_HOME/code
exec /bin/bash "$@"
EOF
    chmod +x /root/start-nachos.sh

# Set up convenient aliases
RUN echo 'alias ll="ls -la"' >> /root/.bashrc && \
    echo 'alias nachos-run="./userprog/nachos"' >> /root/.bashrc && \
    echo 'alias nachos-debug="./userprog/nachos -d +"' >> /root/.bashrc && \
    echo 'cd $NACHOS_HOME/code' >> /root/.bashrc

# Set the default working directory
WORKDIR /root/NachOS/code

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD test -f /root/NachOS/code/userprog/nachos || exit 1

# Default command
CMD ["/root/start-nachos.sh"]